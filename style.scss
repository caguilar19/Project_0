$margin: 10px;

body
{
	background-color: #fffdf4;
	font-family: monaco;
	text-align: center;
	color: black;
}

%header
{
	position: relative;
}

%header, #TextColumns
{
	padding-right: 0;
	padding-left: 0;
}

%menu
{
	position: fixed;
	font-size: 2vw;
	top: 0;
	left: 0;
	/* The z-index makes it so the menu is the top-most layer on the screen. */
	z-index: 1;
}

#HomeHeader
{
	@extend %header;
	.menulink 
	{
	  color: white;
	  text-decoration: underline;
	}
	.menulink:hover 
	{
	  color: white;
	  text-decoration: none;
	}
	.menu
	{
		@extend %menu;
	}
}

/* These media queries control the responsive aspect of the site, namely the 
 response to being on a smaller screen */
@media (min-width: 376px)
{
	.row
	{
		margin: $margin;
		color: black;
	}
	.right
	{
		background-color: yellow;
		/* This makes it so that the width of one column is half of the width of
		the available space minus the 10px used for the separator. This allows 
		the column width to change as the viewport changes while keeping the 
		separation between the two columns constant. */
		width: -webkit-calc((100% - 10px)/2);
	}

	.separator
	{
		width: 10px;
	}

	.left
	{
		background-color: green;
		color: white;
		width: -webkit-calc((100% - 10px)/2);
	}
}

@media (max-width: 375px)
{
	.row
	{
		margin: 0px;
		color: black;
	}

	.right
	{
		padding-left: 5px;
		padding-right: 5px;
		background-color: yellow;
		/* When the viewport is at most as wide as an iPhone X, the two columns 
		become rows stacked on top of each other with no margins */
		width: 100%;
	}

	.separator
	{
		/* The separator is no longer needed since the columns are stacked 
		vertically as rows. */
		width: 0px;
	}

	.left
	{
		padding-left: 5px;
		padding-right: 5px;
		background-color: green;
		color: white;
		width: 100%;
	}
}

#PageHeader
{
	@extend %header;
	.menuitem
	{
	  color: black;
	  text-decoration: underline;
	}
	.menuitem:hover 
	{
	  color: black;
	  text-decoration: none;
	}
	.menu
	{
		@extend %menu;
		background-color: yellow;
		width: 100vw;
		height: 5vw;
	}

}

.title
{
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	font-size: 25vw;
	text-decoration: none;
	#Title{
		text-decoration: none;
	}
	#Title::after 
	{
		color: white;
		content:"Taco";
	}
	/* I was playing around trying to get the text to change and I guessed that 
	the reason for the two colons was that the first corresponded to a 
	pseudoclass and the second to the pseudoelement, so I figured I could use
	'hover' and 'after' together to change the text when the user hovers over
	the title */
	#Title:hover:after 
	{
		/* This changes the text to the IPA pronunciation of "Taco" when the user
 		 hovers over the title */
		content:"'t\32A ako";
	}
}

.pagebody
{
	margin-top: -webkit-calc(5vw + 8px);
	position: relative;
	/* The z-index makes it so that the body is below the menu. */
	z-index: 0;
	h2
	{
		font-size: 6vw;
	}
	.col-lg-6, .col-sm-12
	{
		text-align: left;
		text-indent: 5vw;
		ul
		{
			text-indent: 0;
			font-size: 85%;
			width: 85%;
		}
	}
	table
	{
		width: 100%;
	}
}

.quote
{
	font-style: italic; 
}

.speaker
{
	margin-bottom: 2vw;
}

.footer
{
	font-size: 2vw;
	text-align: left;
	text-indent: 10px;
	margin-bottom: $margin;
}